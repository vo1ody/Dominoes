//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DominoClient.DominoesService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/DominoServer")]
    [System.SerializableAttribute()]
    public partial class Player : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NicknameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WinsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Games {
            get {
                return this.GamesField;
            }
            set {
                if ((this.GamesField.Equals(value) != true)) {
                    this.GamesField = value;
                    this.RaisePropertyChanged("Games");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinScore {
            get {
                return this.MinScoreField;
            }
            set {
                if ((this.MinScoreField.Equals(value) != true)) {
                    this.MinScoreField = value;
                    this.RaisePropertyChanged("MinScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nickname {
            get {
                return this.NicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.NicknameField, value) != true)) {
                    this.NicknameField = value;
                    this.RaisePropertyChanged("Nickname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Wins {
            get {
                return this.WinsField;
            }
            set {
                if ((this.WinsField.Equals(value) != true)) {
                    this.WinsField = value;
                    this.RaisePropertyChanged("Wins");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Position", Namespace="http://schemas.datacontract.org/2004/07/DominoServer")]
    public enum Position : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        L = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        R = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        M = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TableValues", Namespace="http://schemas.datacontract.org/2004/07/DominoServer")]
    [System.SerializableAttribute()]
    public partial struct TableValues : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LeftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RightField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Left {
            get {
                return this.LeftField;
            }
            set {
                if ((this.LeftField.Equals(value) != true)) {
                    this.LeftField = value;
                    this.RaisePropertyChanged("Left");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Right {
            get {
                return this.RightField;
            }
            set {
                if ((this.RightField.Equals(value) != true)) {
                    this.RightField = value;
                    this.RaisePropertyChanged("Right");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bone", Namespace="http://schemas.datacontract.org/2004/07/DominoServer")]
    [System.SerializableAttribute()]
    public partial class Bone : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AngleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Windows.Point CoordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FirstValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DominoClient.DominoesService.Position PosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SecondValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Angle {
            get {
                return this.AngleField;
            }
            set {
                if ((this.AngleField.Equals(value) != true)) {
                    this.AngleField = value;
                    this.RaisePropertyChanged("Angle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Windows.Point Coords {
            get {
                return this.CoordsField;
            }
            set {
                if ((this.CoordsField.Equals(value) != true)) {
                    this.CoordsField = value;
                    this.RaisePropertyChanged("Coords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FirstValue {
            get {
                return this.FirstValueField;
            }
            set {
                if ((this.FirstValueField.Equals(value) != true)) {
                    this.FirstValueField = value;
                    this.RaisePropertyChanged("FirstValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DominoClient.DominoesService.Position Pos {
            get {
                return this.PosField;
            }
            set {
                if ((this.PosField.Equals(value) != true)) {
                    this.PosField = value;
                    this.RaisePropertyChanged("Pos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SecondValue {
            get {
                return this.SecondValueField;
            }
            set {
                if ((this.SecondValueField.Equals(value) != true)) {
                    this.SecondValueField = value;
                    this.RaisePropertyChanged("SecondValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DominoesService.IDominoes", CallbackContract=typeof(DominoClient.DominoesService.IDominoesCallback))]
    public interface IDominoes {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDominoes/Registration", ReplyAction="http://tempuri.org/IDominoes/RegistrationResponse")]
        int Registration(string user, string password, string reminderText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDominoes/Registration", ReplyAction="http://tempuri.org/IDominoes/RegistrationResponse")]
        System.Threading.Tasks.Task<int> RegistrationAsync(string user, string password, string reminderText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDominoes/Login", ReplyAction="http://tempuri.org/IDominoes/LoginResponse")]
        DominoClient.DominoesService.LoginResponse Login(DominoClient.DominoesService.LoginRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDominoes/Login", ReplyAction="http://tempuri.org/IDominoes/LoginResponse")]
        System.Threading.Tasks.Task<DominoClient.DominoesService.LoginResponse> LoginAsync(DominoClient.DominoesService.LoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoes/Logout")]
        void Logout(string nickname, bool isInGame);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoes/Logout")]
        System.Threading.Tasks.Task LogoutAsync(string nickname, bool isInGame);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDominoes/GetReminderText", ReplyAction="http://tempuri.org/IDominoes/GetReminderTextResponse")]
        string GetReminderText(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDominoes/GetReminderText", ReplyAction="http://tempuri.org/IDominoes/GetReminderTextResponse")]
        System.Threading.Tasks.Task<string> GetReminderTextAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoes/UpdatePlayerInfo")]
        void UpdatePlayerInfo(DominoClient.DominoesService.Player player, int score, bool isWin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoes/UpdatePlayerInfo")]
        System.Threading.Tasks.Task UpdatePlayerInfoAsync(DominoClient.DominoesService.Player player, int score, bool isWin);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoes/CanJoinGame")]
        void CanJoinGame();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoes/CanJoinGame")]
        System.Threading.Tasks.Task CanJoinGameAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoes/GetBone")]
        void GetBone(int pNumber);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoes/GetBone")]
        System.Threading.Tasks.Task GetBoneAsync(int pNumber);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoes/MakeMove")]
        void MakeMove(int index, int pNumber, System.Windows.Point p, double angle, DominoClient.DominoesService.Position pos, DominoClient.DominoesService.TableValues tv);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoes/MakeMove")]
        System.Threading.Tasks.Task MakeMoveAsync(int index, int pNumber, System.Windows.Point p, double angle, DominoClient.DominoesService.Position pos, DominoClient.DominoesService.TableValues tv);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoes/SkipMove")]
        void SkipMove(int pNumber);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoes/SkipMove")]
        System.Threading.Tasks.Task SkipMoveAsync(int pNumber);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDominoesCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoes/SetPlayerNumber")]
        void SetPlayerNumber(int pNumber);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoes/UpdateGameInfo")]
        void UpdateGameInfo(int currTurn, DominoClient.DominoesService.Bone[][] players, DominoClient.DominoesService.Bone[] table, int deck, int game, int[] scores, DominoClient.DominoesService.TableValues tv, bool changeMove);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoes/OpponentExit")]
        void OpponentExit();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDominoes/GameOver")]
        void GameOver(int pNumber, int[] scores);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Login", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LoginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string user;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string password;
        
        public LoginRequest() {
        }
        
        public LoginRequest(string user, string password) {
            this.user = user;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoginResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LoginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int LoginResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public DominoClient.DominoesService.Player p;
        
        public LoginResponse() {
        }
        
        public LoginResponse(int LoginResult, DominoClient.DominoesService.Player p) {
            this.LoginResult = LoginResult;
            this.p = p;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDominoesChannel : DominoClient.DominoesService.IDominoes, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DominoesClient : System.ServiceModel.DuplexClientBase<DominoClient.DominoesService.IDominoes>, DominoClient.DominoesService.IDominoes {
        
        public DominoesClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public DominoesClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public DominoesClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DominoesClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DominoesClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public int Registration(string user, string password, string reminderText) {
            return base.Channel.Registration(user, password, reminderText);
        }
        
        public System.Threading.Tasks.Task<int> RegistrationAsync(string user, string password, string reminderText) {
            return base.Channel.RegistrationAsync(user, password, reminderText);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DominoClient.DominoesService.LoginResponse DominoClient.DominoesService.IDominoes.Login(DominoClient.DominoesService.LoginRequest request) {
            return base.Channel.Login(request);
        }
        
        public int Login(string user, string password, out DominoClient.DominoesService.Player p) {
            DominoClient.DominoesService.LoginRequest inValue = new DominoClient.DominoesService.LoginRequest();
            inValue.user = user;
            inValue.password = password;
            DominoClient.DominoesService.LoginResponse retVal = ((DominoClient.DominoesService.IDominoes)(this)).Login(inValue);
            p = retVal.p;
            return retVal.LoginResult;
        }
        
        public System.Threading.Tasks.Task<DominoClient.DominoesService.LoginResponse> LoginAsync(DominoClient.DominoesService.LoginRequest request) {
            return base.Channel.LoginAsync(request);
        }
        
        public void Logout(string nickname, bool isInGame) {
            base.Channel.Logout(nickname, isInGame);
        }
        
        public System.Threading.Tasks.Task LogoutAsync(string nickname, bool isInGame) {
            return base.Channel.LogoutAsync(nickname, isInGame);
        }
        
        public string GetReminderText(string user) {
            return base.Channel.GetReminderText(user);
        }
        
        public System.Threading.Tasks.Task<string> GetReminderTextAsync(string user) {
            return base.Channel.GetReminderTextAsync(user);
        }
        
        public void UpdatePlayerInfo(DominoClient.DominoesService.Player player, int score, bool isWin) {
            base.Channel.UpdatePlayerInfo(player, score, isWin);
        }
        
        public System.Threading.Tasks.Task UpdatePlayerInfoAsync(DominoClient.DominoesService.Player player, int score, bool isWin) {
            return base.Channel.UpdatePlayerInfoAsync(player, score, isWin);
        }
        
        public void CanJoinGame() {
            base.Channel.CanJoinGame();
        }
        
        public System.Threading.Tasks.Task CanJoinGameAsync() {
            return base.Channel.CanJoinGameAsync();
        }
        
        public void GetBone(int pNumber) {
            base.Channel.GetBone(pNumber);
        }
        
        public System.Threading.Tasks.Task GetBoneAsync(int pNumber) {
            return base.Channel.GetBoneAsync(pNumber);
        }
        
        public void MakeMove(int index, int pNumber, System.Windows.Point p, double angle, DominoClient.DominoesService.Position pos, DominoClient.DominoesService.TableValues tv) {
            base.Channel.MakeMove(index, pNumber, p, angle, pos, tv);
        }
        
        public System.Threading.Tasks.Task MakeMoveAsync(int index, int pNumber, System.Windows.Point p, double angle, DominoClient.DominoesService.Position pos, DominoClient.DominoesService.TableValues tv) {
            return base.Channel.MakeMoveAsync(index, pNumber, p, angle, pos, tv);
        }
        
        public void SkipMove(int pNumber) {
            base.Channel.SkipMove(pNumber);
        }
        
        public System.Threading.Tasks.Task SkipMoveAsync(int pNumber) {
            return base.Channel.SkipMoveAsync(pNumber);
        }
    }
}
